#
msgid ""
msgstr ""
"Project-Id-Version: Patacrep 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-28 18:15+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../more/templates.rst:4
msgid "Changer la mise en page des carnets : le système des templates"
msgstr ""

#: ../../more/templates.rst:6
msgid "Le processus de génération d'un carnet en PDF est le suivant :"
msgstr ""

#: ../../more/templates.rst:8
msgid "Création du fichier .tex"
msgstr ""

#: ../../more/templates.rst:9
msgid "Compilation avec :command:`lualatex`"
msgstr ""

#: ../../more/templates.rst:10
msgid "Compilation des index"
msgstr ""

#: ../../more/templates.rst:11
msgid "Compilation avec :command:`lualatex` prenant en compte les index"
msgstr ""

#: ../../more/templates.rst:13
msgid ""
"Après l'étape 1, l'intégralité du carnet (contenu et mise en page) est "
"défini. Pour modifier un carnet, il faut donc se pencher sur cette étape."
" La gestion du contenu est déléguée aux :ref:`plugins <plugins_write>`, "
"ici nous allons voir comment modifier la mise en page. LaTeX étant "
"utilisé pour créer ces carnets, une bonne connaissance de ce langage est "
"nécessaire."
msgstr ""

#: ../../more/templates.rst:19
msgid ""
"Ces fichiers :file:`.tex` sont créés avec le moteur de template `Jinja2 "
"<http://jinja.pocoo.org/>`_, en utilisant une syntaxe légèrement "
"différente de la version par défaut et plus adaptée à LaTeX."
msgstr ""

#: ../../more/templates.rst:23
msgid "Fonctionnement d'un système de templates"
msgstr ""

#: ../../more/templates.rst:26
msgid "Idée de base"
msgstr ""

#: ../../more/templates.rst:28
msgid ""
"Lors de la création de carnets de chants avec LaTeX, on écrit souvent des"
" fichiers ayant la même structure, mais un contenu un peu différent. Un "
"moteur de template permet de décrire la structure du fichier final, en "
"indiquant quelle valeur devra être utilisée à quel endroit pour effectuer"
" le rendu du document."
msgstr ""

#: ../../more/templates.rst:34
msgid "Syntaxe"
msgstr ""

#: ../../more/templates.rst:36
msgid ""
"Il y a deux types d'éléments de syntaxe avec Jinja2 : des variables, qui "
"seront simplement remplacées par leurs valeurs et des instructions de "
"contrôle, qui permettent d'ajouter de la logique dans la construction des"
" templates."
msgstr ""

#: ../../more/templates.rst:53
msgid ":dfn:`Variables` :"
msgstr ""

#: ../../more/templates.rst:41
msgid ""
"Les variables sont délimitées par deux parenthèses : ``((song))`` sera "
"remplacé par le contenu de la variable ``song`` lors du rendu d'un "
"template. Il est possible d'appeler des méthodes python sur les variables"
" : ``(( songlist.length() ))`` est tout à fait valide (si toutefois "
"l'objet ``songlist`` a une méthode ``length()``)."
msgstr ""

#: ../../more/templates.rst:47
msgid ""
"Les variables accessibles dans un template sont l'ensemble des options "
"définies dans le :ref:`bloc de déclaration des variables "
"<templates_vars>`, et prennent soit les valeurs par défaut, soit les "
"valeurs définies par les utilisateurs dans les fichiers :file:`.sb`."
msgstr ""

#: ../../more/templates.rst:51
msgid ""
"Lorsque ces variables sont des chemins de fichiers, il est important de "
"toujours utiliser la fonction :py:func:`path2posix` afin de normaliser "
"l'écriture de ces chemins. Par exemple : ``(( path2posix(path) ))``."
msgstr ""

#: ../../more/templates.rst:57
msgid ":dfn:`Instructions` :"
msgstr ""

#: ../../more/templates.rst:56
msgid ""
"Les instructions sont signalées par ``(* *)``. Il en existe plusieurs, "
"qui suivent le même format : ``(* <instruction> <arguments> *)``, et qui "
"se terminent parfois par ``(* end<instruction> *)``."
msgstr ""

#: ../../more/templates.rst:59
msgid "Les instructions les plus utiles sont détaillées ici."
msgstr ""

#: ../../more/templates.rst:71
msgid ":dfn:`block` :"
msgstr ""

#: ../../more/templates.rst:62
msgid ""
"L'instruction ``(* block *)`` permet de placer du contenu à un endroit du"
" document. Si le bloc en question existe dans un des :ref:`templates "
"parents <template_extends>`, le contenu du bloc sera placé à cet endroit."
msgstr ""

#: ../../more/templates.rst:65
msgid "La syntaxe exacte est : ::"
msgstr ""

#: ../../more/templates.rst:71
msgid ""
"Plusieurs blocs sont définis dans les :ref:`templates par défaut "
"<templates_default>`"
msgstr ""

#: ../../more/templates.rst:81
msgid ":dfn:`extends` :"
msgstr ""

#: ../../more/templates.rst:76
msgid ""
"Il est possible d'étendre un template près-existant. Dès lors, tout le "
"contenu écrit dans un bloc sera placé dans le bloc correspondant du "
"template parent. Si le bloc n'existe pas, le contenu sera placé à la fin "
"du fichier, et donc ignoré à la compilation LaTeX car placé après le "
"``\\end{document}``. Pour étendre un template particulier, on utilise ::"
msgstr ""

#: ../../more/templates.rst:104
msgid ":dfn:`if` :"
msgstr ""

#: ../../more/templates.rst:84
msgid ""
"Il est possible d'effectuer des placements conditionels avec les "
"instructions ``if``. La syntaxe est simplement : ::"
msgstr ""

#: ../../more/templates.rst:95
msgid ""
"Les insructions `elif` et `else` sont facultatives, et les conditions "
"peuvent être n'importe quelle expression valide en Python. Par exemple : "
"::"
msgstr ""

#: ../../more/templates.rst:121
msgid ":dfn:`for` :"
msgstr ""

#: ../../more/templates.rst:107
msgid ""
"Il est possible de répeter un contenu avec une boucle ``for``. La syntaxe"
" est la suivante : ::"
msgstr ""

#: ../../more/templates.rst:113
msgid "Un cas d'utilisation pourrai être : ::"
msgstr ""

#: ../../more/templates.rst:123
#, python-format
msgid ""
"Pour le reste des fonctionalités de Jinja, vous pouvez aller voir la "
"`documentation <http://jinja.pocoo.org/>`__, en retenant que ``{{ "
"variable }}`` et ``{% instruction %}`` ont été remplacé par ``(( variable"
" ))`` et ``(* instruction *)``."
msgstr ""

#: ../../more/templates.rst:129
msgid "Templates par défaut"
msgstr ""

#: ../../more/templates.rst:131
msgid ""
"Les templates suivants sont fournis par défaut par ``Patacrep`` et "
"remplissent des fonctions différentes."
msgstr ""

#: ../../more/templates.rst:164
msgid ":file:`layout.tex`"
msgstr ""

#: ../../more/templates.rst:135
msgid ""
"Défini l'ensemble des ``block`` qui seront accessibles aux autres "
"templates. Les blocs suivants sont définis, dans cet ordre :"
msgstr ""

#: ../../more/templates.rst:139
msgid ":dfn:`documentclass`"
msgstr ""

#: ../../more/templates.rst:139
msgid ""
"Bloc contenant la commande ``\\documentclass{article}``. À surcharger "
"pour changer la classe LaTeX utilisée, ou ajouter des options ;"
msgstr ""

#: ../../more/templates.rst:143
msgid ":dfn:`preambule`"
msgstr ""

#: ../../more/templates.rst:142
msgid ""
"Bloc placé avant le ``\\begin{document}``. Utile pour importer des "
"packages ou redéfinir des macro LaTeX ;"
msgstr ""

#: ../../more/templates.rst:146
msgid ":dfn:`title`"
msgstr ""

#: ../../more/templates.rst:146
msgid ""
"Bloc utilisé pour placer les commandes de la page de titre, `i.e.` "
"``\\maketitle`` ;"
msgstr ""

#: ../../more/templates.rst:149
msgid ":dfn:`preface`"
msgstr ""

#: ../../more/templates.rst:149
msgid "Pour ajouter une préface au recueil ;"
msgstr ""

#: ../../more/templates.rst:152
msgid ":dfn:`index`"
msgstr ""

#: ../../more/templates.rst:152
msgid "Pour placer les index ;"
msgstr ""

#: ../../more/templates.rst:155
msgid ":dfn:`chords`"
msgstr ""

#: ../../more/templates.rst:155
msgid "Pour placer une liste d'accords au début du carnet ;"
msgstr ""

#: ../../more/templates.rst:158
msgid ":dfn:`songs`"
msgstr ""

#: ../../more/templates.rst:158
msgid "Le contenu principal est placé dans ce bloc ;"
msgstr ""

#: ../../more/templates.rst:161
msgid ":dfn:`postface`"
msgstr ""

#: ../../more/templates.rst:161
msgid "Pour ajouter une postface au recueil."
msgstr ""

#: ../../more/templates.rst:163
msgid "Ce template ne produit aucun fichier PDF."
msgstr ""

#: ../../more/templates.rst:167
msgid ":file:`songs.tex`"
msgstr ""

#: ../../more/templates.rst:167
msgid ""
"Le template :file:`songs.tex` étends :file:`layout.tex`, et se charge de "
"placer le contenu dans le document. Il contient le minimum nécessaire "
"pour que les chansons (mais pas les index) soient rendues."
msgstr ""

#: ../../more/templates.rst:171
msgid ":file:`default.tex`"
msgstr ""

#: ../../more/templates.rst:170
msgid ""
"Le template :file:`default.tex` étends :file:`songs.tex`, et applique une"
" mise en forme minimale, ainsi que les index. Si vous voulez créer votre "
"propre mise en page, c'est sans doute celui-ci qu'il vous faudra étendre."
msgstr ""

#: ../../more/templates.rst:176
msgid ":file:`patacrep.tex`"
msgstr ""

#: ../../more/templates.rst:174
msgid ""
"Le template :file:`patacrep.tex` étends :file:`default.tex`, et applique "
"la mise en forme spéciale du projet Patacrep. Si vous souhaitez modifier "
"légèrement la mise en page du carnet, ce template sera utile."
msgstr ""

#: ../../more/templates.rst:179
msgid "Créer son propre template"
msgstr ""

#: ../../more/templates.rst:181
msgid ""
"Pour créer votre propre template et l'utiliser, il vous faudra creer un "
"fichier :file:`mon_template.tex` dans un sous-dossier :file:`templates` "
"d'un :ref:`datadir <datadir_templates>`, et ajouter ``template: "
"mon_template.tex`` dans la section ``book`` de votre fichier "
":file:`.yaml`. Le plus simple pour vous est encore de faire hériter votre"
" template de l'un des templates par défaut de Patacrep, comme "
":file:`default.tex` ou :file:`patacrep.tex`. Vous pourrez alors "
"(re)définir les commandes LaTeX de votre choix."
msgstr ""

#: ../../more/templates.rst:187
msgid ""
"La `documentation "
"<http://songs.sourceforge.net/songsdoc/songs.html#sec11>`_ (en anglais) "
"du package ``songs`` explique comment modifier la mise en page des "
"carnets créés, et quelles commandes redéfinir."
msgstr ""

#: ../../more/templates.rst:193
msgid "Les variables"
msgstr ""

#: ../../more/templates.rst:196
msgid ""
"Ce paragraphe n'a pas encore été mis-à-jour avec la dernière version de "
"patacrep. Il est conseillé de s'inspirer des templates existants "
"(``default.tex``, ``layout.tex``...) et de ne pas hésiter à demander de "
"l'aide sur `github <https://github.com/patacrep/patacrep/issues/new>`_."
msgstr ""

#: ../../more/templates.rst:200
msgid ""
"Si vous voulez accéder à des variables dans vos templates avec la syntaxe"
" ``(( ma_variable ))``, vous devez définir ces variables au début de "
"votre fichier de template. Ces définitions doivent être placées entre les"
" instructions ``(* variables *)`` et ``(* endvariables *)``, et sont "
"décrites au format JSON selon le schéma suivant :"
msgstr ""

#: ../../more/templates.rst:212
msgid ""
"Les variables sont déclarées dans un dictionnaire, dont les clefs sont "
"les noms des variables, et les valeurs des dictionnaires. Dans ces "
"valeurs peuvent entrer plusieurs clefs, dont les plus utiles sont "
"``\"description\"``, qui est un dictionnaire de description de cette "
"variable ; et ``\"default\"`` qui renseigne la valeur par défaut de cette"
" variable."
msgstr ""

#: ../../more/templates.rst:216
msgid ""
"La valeur par défaut peut être de tous les types acceptés par JSON "
"(chaînes, listes et dictionnaires) et peut dépendre ou non de la langue, "
"avec la syntaxe suivante :"
msgstr ""

#~ msgid "TODO"
#~ msgstr ""

#~ msgid "(sans réinventer la documentation de jinja2)"
#~ msgstr ""

