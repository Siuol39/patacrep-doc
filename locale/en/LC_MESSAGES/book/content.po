# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, L'équipe Patacrep
# This file is distributed under the same license as the Patacrep package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Patacrep 5.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-28 23:27+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../book/content.rst:4
msgid "Gestion du contenu"
msgstr ""

#: ../../book/content.rst:6
msgid "Cette partie décrit comment choisir les chants à insérer dans un carnet."
msgstr ""

#: ../../book/content.rst:9
msgid "Introduction"
msgstr ""

#: ../../book/content.rst:11
msgid ""
"Le contenu d'un carnet est défini avec l'option ``content`` du fichier "
":ref:`.yaml <yaml>`, sous la forme d'une liste. Le type de cette liste "
"dépend du contenu à inclure. Voici un exemple de contenu."
msgstr ""

#: ../../book/content.rst:29
msgid ""
"Comme nous pouvons le voir, la valeur de ``content`` est une liste de "
"tableaux associatifs ou de chaînes de caractères. Une chaîne de "
"caractères est automatiquement transformé en tableau avec une clé "
"``song``. Ainsi ``\"boire/*.csg\"`` et ``song: \"boire/*.csg\"`` sont "
"équivalents. La *clé* d'un tableau associatif (avant le ``:``) est une "
"chaîne indiquant le :ref:`type de contenu <content_types>` considéré : "
"par exemple ``section: \"Chansons à boire\"`` va créer une section ayant "
"pour titre *Chansons à boire*, tandis que"
msgstr ""

#: ../../book/content.rst:44
msgid ""
"va inclure toutes les chansons des répertoires ``amour/*.csg`` et "
"``love/*.csg``, triées par auteur (``by``), puis par titre (``title``)."
msgstr ""

#: ../../book/content.rst:46
msgid ""
"Lorsqu'un tableau de type ``content`` n'a pas de contenu, cela va inclure"
" toutes les chansons du répertoire :file:`songs`:"
msgstr ""

#: ../../book/content.rst:52
msgid ""
"Ou alors pour inclure toutes ces chansons, triées pas auteur, album puis "
"titre (c'est le tri par défaut) :"
msgstr ""

#: ../../book/content.rst:63
msgid "Types de contenus disponibles"
msgstr ""

#: ../../book/content.rst:65
msgid ""
"Les types de contenus gérés par :py:mod:`patacrep` sont fournis par des "
"extensions (ou plugins). Un certain nombre (décrits ci-après) sont "
"proposés par défaut, et il est possible d'en écrire d'autres."
msgstr ""

#: ../../book/content.rst:98
msgid ":py:mod:`song`"
msgstr ""

#: ../../book/content.rst:97
msgid "liste de chansons"
msgstr ""

#: ../../book/content.rst:70
msgid ""
"Ce plugin, utilisé par défaut en l'absence de mot-clé, permet d'inclure "
"une liste de chansons, triées par ordre alphabétique du nom de fichier. "
"Il est suivi d'une ou plusieurs expressions rationnelles correspondant "
"aux noms de fichiers à inclure. La syntaxe précise de ces expressions est"
" décrite dans la documentation du module `glob "
"<https://docs.python.org/3.4/library/glob.html>`_ ; le minimum à savoir "
"est que :file:`/` est utilisé pour parcourir les répertoires, :file:`..` "
"correspond au répertoire parent, et :file:`*` à n'importe quelle chaîne "
"de caractères."
msgstr ""

#: ../../book/content.rst:84
msgid "Est équivalent à (mot-clé ``song`` automatique):"
msgstr ""

#: ../../book/content.rst:93
msgid ""
"Les fichiers sont recherchés successivement dans les datadirs associés à "
"un carnet : :py:mod:`song` commence par chercher dans le repertoire "
":file:`songs` du premier datadir et si au moins un fichier correspond à "
"l'expression rationnelle, stoppe la recherche et passe à l'expression "
"suivante. Sinon, il cherche dans le datadir suivant, et ainsi de suite "
"jusqu'à la fin de la liste."
msgstr ""

#: ../../book/content.rst:163
msgid ":py:mod:`sorted`"
msgstr ""

#: ../../book/content.rst:162
msgid "liste triée de chansons"
msgstr ""

#: ../../book/content.rst:103
msgid ""
"Ce plugin permet l'inclusion de chansons, triées selon un certain ordre. "
"Il prend deux arguments (facultatifs): ``key`` pour la liste des champs "
"selon lesquels les chansons de l'argument ``content`` doivent être "
"triées. Ces champs correspondent aux `keyvals` de l'environnement "
"``song`` (`documentation "
"<http://songs.sourceforge.net/songsdoc/songs.html#sec5.1>`_), à ceux "
"ajoutés par :py:mod:`patacrep`, ainsi que ceux éventuellement ajoutés par"
" le template courant, et à des champs spéciaux. cela donne finalement :"
msgstr ""

#: ../../book/content.rst:112
msgid "Paquet `songs <http://songs.sourceforge.net>`__"
msgstr ""

#: ../../book/content.rst:116 ../../book/content.rst:129
#: ../../book/content.rst:140
msgid "Nom"
msgstr ""

#: ../../book/content.rst:116 ../../book/content.rst:129
#: ../../book/content.rst:140
msgid "Description"
msgstr ""

#: ../../book/content.rst:118
msgid "by"
msgstr ""

#: ../../book/content.rst:118
msgid "auteurs"
msgstr ""

#: ../../book/content.rst:119
msgid "cr"
msgstr ""

#: ../../book/content.rst:119
msgid "informations de copyright"
msgstr ""

#: ../../book/content.rst:120
msgid "li"
msgstr ""

#: ../../book/content.rst:120
msgid "licence"
msgstr ""

#: ../../book/content.rst:121
msgid "sr"
msgstr ""

#: ../../book/content.rst:121
msgid ""
"référence à la bible (le paquet `songs` a été écrit à l'origine pour des "
"chants religieux)"
msgstr ""

#: ../../book/content.rst:122
msgid "index"
msgstr ""

#: ../../book/content.rst:122
msgid "une entrée supplémentaire dans l'index pour un vers"
msgstr ""

#: ../../book/content.rst:123
msgid "ititle"
msgstr ""

#: ../../book/content.rst:123
msgid "une entrée supplémentaire dans l'index pour un titre"
msgstr ""

#: ../../book/content.rst:126
msgid "Paquet `patacrep`"
msgstr ""

#: ../../book/content.rst:131
msgid "album"
msgstr ""

#: ../../book/content.rst:131
msgid "Album"
msgstr ""

#: ../../book/content.rst:132
msgid "original"
msgstr ""

#: ../../book/content.rst:132
msgid "Titre original"
msgstr ""

#: ../../book/content.rst:133
msgid "cov"
msgstr ""

#: ../../book/content.rst:133
msgid ""
"Chemin de l'image de couverture (relative ou non au répertoire du fichier"
" :file:`.csg`)"
msgstr ""

#: ../../book/content.rst:134
msgid "url"
msgstr ""

#: ../../book/content.rst:134
msgid "URL de la chanson"
msgstr ""

#: ../../book/content.rst:137
msgid "Valeurs spéciales"
msgstr ""

#: ../../book/content.rst:142
msgid "title"
msgstr ""

#: ../../book/content.rst:142
msgid "Titres"
msgstr ""

#: ../../book/content.rst:143
msgid "path"
msgstr ""

#: ../../book/content.rst:143
msgid "Chemin du fichier"
msgstr ""

#: ../../book/content.rst:146
msgid "L'ordre de tri par défaut est : auteurs, album, titre."
msgstr ""

#: ../../book/content.rst:148
msgid ""
"Il faut remarque la liste de contenu de ``sorted`` n'est pas "
"nécessairement une liste d'expression rationnelle : c'est n'importe quel "
"élément de contenu qui renvoie une liste de chansons. Ainsi (en utilisant"
" le plugin :py:mod:`cwd` décrit ci-après) le ``content`` suivant est "
"parfaitement valide."
msgstr ""

#: ../../book/content.rst:162
msgid ""
"Une conséquence de cela est que ne pas donner de ``content`` à  "
"``sorted`` permet d'inclure toutes les chansons du répertoire "
":file:`songs`, récursivement."
msgstr ""

#: ../../book/content.rst:213
msgid ":py:mod:`cd`"
msgstr ""

#: ../../book/content.rst:212
msgid "changement de répertoire"
msgstr ""

#: ../../book/content.rst:166
msgid ""
"Lorsque plusieurs chansons du même répertoire sont incluses, il peut être"
" fastidieux de redonner le chemin complet à chaque fois. Ce plugin permet"
" d'éviter ce travail. Les deux valeurs suivantes de la variable "
"``content`` sont équivalentes :"
msgstr ""

#: ../../book/content.rst:188
msgid ""
"Cette commande recherche en priorité des chants dans le sous-dossier "
"``path`` relatif au dossier du fichier :ref:`.yaml <yaml>`. Si aucun "
"contenu n'est trouvé, alors les chants sont recherché dans le sous-"
"dossier  ``path`` relatif au répertoire :file:`songs` des :ref:`datadir "
"<datadir>` (dans lequel sont cherchées les chansons par défaut)."
msgstr ""

#: ../../book/content.rst:193
msgid ""
"Enfin, il faut remarquer que, tout comme le plugin :py:mod:`sorted`, la "
"liste de contenu de :py:mod:`cd` n'est pas limitée à une liste "
"d'expressions rationnelles correspondant à des chansons : elle peut être "
"n'importe quel contenu correspondant à une liste de chansons. De plus, la"
" commande ``cd`` utlisée sans préciser de ``path`` permet d'inclure "
"toutes les chansons (récursivement) comprises dans le répertoire "
":file:`path`."
msgstr ""

#: ../../book/content.rst:205
msgid ""
"Ne va inclure que les chants situés directement dans le dossier "
":file:`chants_a_boire`, alors que la command ``cd`` suivante va aussi "
"inclure les chants des sous-dossiers :file:`chants_a_boire/de_l_eau/`, "
":file:`chants_a_boire/du_vin/`..."
msgstr ""

#: ../../book/content.rst:231
msgid ":py:mod:`section`"
msgstr ""

#: ../../book/content.rst:230
msgid "sections LaTeX"
msgstr ""

#: ../../book/content.rst:216
msgid ""
"Ce plugin permet d'inclure des sections (et chapitres, paragraphes, "
"etc.). Les mots-clefs sont ``part``, ``chapter``, ``section``, "
"``subsection``, ``subsubsection``, ``paragraph``, ``subparagraph``, ainsi"
" que leurs versions étoilées (qui ne seront pas numérotées)."
msgstr ""

#: ../../book/content.rst:221
msgid ""
"Ces mots-clefs ont pour contenu soit une chaîne de caractères (le titre),"
" soit une valeur ``name`` et une valeur ``short`` pour les versions non "
"étoilées (le titre, et le titre court, optionnel, pour la table des "
"matières)."
msgstr ""

#: ../../book/content.rst:239
msgid ""
":py:mod:`songsection` : sections du paquet `songs "
"<http://songs.sourceforge.net>`__"
msgstr ""

#: ../../book/content.rst:238
msgid "sections du paquet songs"
msgstr ""

#: ../../book/content.rst:234
msgid ""
"Ce plugin introduit deux mots-clefs ``songchapter`` et ``songsection``, "
"qui correspondent aux sections et chapitres définis par le paquet "
"`songs`. Le style de ces sections est plus cohérent avec l'apparence des "
"chansons, mais elles ne sont pas numérotées, et il n'y a pas de version "
"étoilée."
msgstr ""

#: ../../book/content.rst:239
msgid "Exemple : ``songchapter: \"Chansons d'amour\"``"
msgstr ""

#: ../../book/content.rst:247
msgid ":py:mod:`tex`"
msgstr ""

#: ../../book/content.rst:246
msgid "inclusion de fichiers LaTeX quelconques"
msgstr ""

#: ../../book/content.rst:244
msgid ""
"Il est possible avec ce plugin d'inclure un fichier LaTeX quelconque. "
"L'unique mot-clef ``tex`` prend en argument le ou les fichiers latex à "
"inclure dans le carnet."
msgstr ""

#: ../../book/content.rst:247
msgid "Exemple : ``tex: \"intro.tex\"``"
msgstr ""

#: ../../book/content.rst:279
msgid ":py:mod:`include`: inclusion d'un autre fichier de contenu."
msgstr ""

#: ../../book/content.rst:250
msgid ""
"Ce plugin permet d'inclure un autre fichier au format ``YAML`` dans le "
"contenu du carnet courant. Ainsi, mettre ``include: \"my_content.sbc\"`` "
"ira chercher le fichier :file:`my_content.sbc` et placera le contenu de "
"ce fichier dans le carnet principal. :file:`my_content.sbc` doit contenir"
" une liste d'éléments de contenu valide. Par exemple, on peut imaginer "
"qu'il contienne ceci :"
msgstr ""

#: ../../book/content.rst:263
msgid ""
"En particulier, il peut donc contenir un ou plusieurs autres mot-clef "
"``\"include\"``, et il est possible de les trier à postériori:"
msgstr ""

#: ../../book/content.rst:273
msgid ""
"Un cas d'utilisation typique est l'inclusion du même contenu dans "
"plusieurs carnets différents. L'extention :file:`.sbc` est arbitraire, et"
" a été choisie commme abréviation de \"SongBook Content\" (contenu de "
"carnet de chants), cependant il est tout à fait autorisé d'utiliser "
"d'autres extensions: ``include: \"fichier.yaml\"``."
msgstr ""

#: ../../book/content.rst:278
msgid ""
"Les fichiers inclus de cette manière sont recherchés dans tous les "
":ref:`datadir <datadir>` plus le dossier dans lequel se trouve le fichier"
" dans lequel ``\"include\"`` a été rencontré."
msgstr ""

#: ../../book/content.rst:291
msgid ":py:mod:`addsongdir`"
msgstr ""

#: ../../book/content.rst:290
msgid ""
"ajout d'un dossier à la liste des dossiers à parcourir pour trouver des "
"chansons."
msgstr ""

#: ../../book/content.rst:284
msgid "Le chemin (``path``) est relatif au chemin du fichier ``.yaml``."
msgstr ""

#: ../../book/content.rst:301
msgid ":py:mod:`setcounter`"
msgstr ""

#: ../../book/content.rst:300
msgid "spécifie le numéro de la prochaine chanson."
msgstr ""

#: ../../book/content.rst:296
msgid ""
"Utile si l'on souhaite qu'une nouvelle section recommence la numérotation"
" à 1 ou, au contraire, sauter des numéros pour que la section change de "
"centaine par exemple."
msgstr ""

#: ../../book/content.rst:299
msgid "Usage : ``setcounter: 101``"
msgstr ""

#: ../../book/content.rst:303
msgid ""
"Il est possible d'ajouter son propre type de contenu (images, fichiers "
"abc, ...) à un carnet en écrivant son propre plugin. La procédure est "
"décrite dans la section :ref:`plugins_write`."
msgstr ""

#: ../../book/content.rst:306
msgid ""
"Les fichiers utilisés par :py:mod:`patacrep` pour créer des carnets de "
"chant sont rassemblés dans des dossier qui suivent une organisation "
"particulière. Cette organisation est décrite dans la section "
":ref:`datadir`."
msgstr ""

